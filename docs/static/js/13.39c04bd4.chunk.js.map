{"version":3,"sources":["components/register/title/Title.js","components/register/link/LinkLogin.js","components/register/Register.js"],"names":["Container","styled","h1","Span","span","Title","Link","LinkLogin","to","div","bgReg","Form","form","Error","p","Terms","Label","PInput","label","Input","input","Checkbox","Submit","button","A","a","PZindex","Errors","ErrorServer","Register","history","useHistory","dispatch","useDispatch","resErrors","useSelector","state","auth","error","useForm","register","handleSubmit","watch","errors","isAuthenticated","useEffect","push","Logo","path","onSubmit","data","registerUser","type","id","name","aria-invalid","ref","required","maxLength","minLength","htmlFor","role","password","password2","validate","value","email","terms","href","map","err","i","key"],"mappings":"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","file":"static/js/13.39c04bd4.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.h1`\r\n  font-size: 3rem;\r\n  margin: 25px 0;\r\n  letter-spacing: 1px;\r\n  color: #F9B613;\r\n  @media (min-width: 768px) {\r\n    font-size: 5rem;\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\nconst Span = styled.span`\r\n  color: #0798DA;\r\n`;\r\nconst Title = () => {\r\n    return (\r\n        <Container>\r\n            <Span>R</Span>egister\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Title;","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Container = styled(Link)`\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 20px;\r\n  font-size: 1.5rem;\r\n  color: #F9B613;\r\n  text-decoration: none;\r\n  @media(min-width: 768px){\r\n    font-size: 3rem;\r\n    letter-spacing: 1px;\r\n  }\r\n`;\r\nconst Span = styled.span`\r\n  color: #0798DA;\r\n`;\r\nconst LinkLogin = () => {\r\n    return (\r\n        <Container to=\"/login\"><Span>L</Span>ogin</Container>\r\n    );\r\n};\r\n\r\nexport default LinkLogin;","import React, {useEffect} from 'react';\r\nimport { useForm} from \"react-hook-form\";\r\nimport styled from 'styled-components'\r\nimport {useHistory} from \"react-router-dom\";\r\nimport Logo from \"../logo/Logo\";\r\nimport Title from \"./title/Title\";\r\nimport bgReg from \"../../img/bgReg.webp\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {registerUser} from \"../../redux/auth/authActions\";\r\nimport LinkLogin from \"./link/LinkLogin\";\r\n\r\nconst Container = styled.div`\r\n  padding: 8vh 0;\r\n  width: 100vw;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-image: url(${bgReg});\r\n  background-repeat: no-repeat;\r\n  background-attachment: fixed;\r\n  background-position: center;\r\n  background-size: cover;\r\n  @media (min-width: 768px) {\r\n    margin: 0;\r\n    background: url(${bgReg}) center/cover no-repeat;\r\n  }\r\n  \r\n`;\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 90vw;\r\n  @media (min-width: 768px) {\r\n    width: 60vw;\r\n  }\r\n`;\r\nconst Error = styled.p`\r\n color: red;\r\n font-size: 1rem;\r\n position: absolute;\r\n top: 102%;\r\n`;\r\nconst Terms = styled.div`\r\n  align-self: start;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.1rem;\r\n  margin: 30px 0;\r\n  position: relative;\r\n`;\r\nconst Label = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 80px;\r\n  margin-bottom: 20px;\r\n`;\r\nconst PInput = styled.label`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  font-size: 1.5rem;\r\n  height: 40px;\r\n  padding: 5px;\r\n  transition: opacity 0.8s ease;\r\n  opacity: 1;\r\n  overflow: hidden;\r\n  &::after{\r\n    content: \"\";\r\n    position: absolute;\r\n    bottom: 50%;\r\n    right: 0;\r\n    width: 100%;\r\n    height: 50%;\r\n    background-color: #F9B613;\r\n    opacity: 0.4;\r\n    z-index: 1;\r\n    transition: transform 1s ease;\r\n    transform: skew(40deg) rotate(15deg) translate(100%,50%);\r\n  }\r\n`;\r\nconst Input = styled.input`\r\n  display: block;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 40px;\r\n  border: none;\r\n  border-bottom: 2px solid #000;\r\n  outline: none;\r\n  font-size: 1.2rem;\r\n  padding-left: 5px;\r\n  transition: border 1s ease;\r\n  background: transparent;\r\n  &:focus + ${PInput}::after{\r\n    transform: skew(40deg) rotate(15deg) translate(0,50%);\r\n  }\r\n  &:focus{\r\n    border-bottom: 2px solid #F9B613; \r\n  }\r\n`;\r\nconst Checkbox = styled.input`\r\n  width: 20px;\r\n  height: 20px;\r\n  margin-right: 10px;\r\n`;\r\nconst Submit = styled.button`\r\n  width: 80%;\r\n  font-size: 1.8rem;\r\n  cursor: pointer;\r\n  padding: 7px 0;\r\n  outline: none;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 3px;\r\n  background: transparent;\r\n  position: relative;\r\n  overflow: hidden;\r\n  &::after{\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 200%;\r\n    height: 100%;\r\n    z-index: 1;\r\n    background: linear-gradient(to left, #F9B613, #0798DA);\r\n    transition: transform 1s ease;\r\n  }\r\n  &:hover::after{\r\n    transform: translateX(-50%);\r\n  }\r\n   @media (min-width: 768px) {\r\n    width: 50%;\r\n  }\r\n`;\r\nconst A = styled.a`\r\n  text-decoration-line: underline;\r\n  text-decoration-style: solid;\r\n  text-decoration-color: #F9B613;\r\n  color: #F9B613;\r\n`;\r\n\r\nconst PZindex = styled.p`\r\n  position: relative;\r\n  z-index: 5;\r\n`;\r\nconst Errors = styled.div`\r\n  align-self: start;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst ErrorServer = styled.p`\r\n color: red;\r\n font-size: 1rem;\r\n`;\r\nconst Register = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const resErrors = useSelector(state => state.auth.error);\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const onSubmit = data =>{\r\n        dispatch(registerUser(data,history));\r\n    };\r\n    const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            history.push(\"/dashboard\"); // push user to dashboard when they login\r\n        }\r\n    },[isAuthenticated]);// eslint-disable-line react-hooks/exhaustive-deps\r\n    return (\r\n        isAuthenticated ? null : <>\r\n                <Logo path=\"/\"/>\r\n                <LinkLogin/>\r\n                <Container>\r\n                    <Title/>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        <Label>\r\n                            <Input type=\"text\" id=\"nick\" name=\"name\" aria-invalid={errors.name ? \"true\" : \"false\"} ref={register({required: true,maxLength:20,minLength: 3})} />\r\n                            <PInput htmlFor=\"nick\"><PZindex>Name</PZindex></PInput>\r\n                            {errors.name && errors.name.type === \"required\" && <Error role=\"alert\">This field is required</Error>}\r\n                            {errors.name && errors.name.type === \"minLength\" && <Error role=\"alert\">Min length 3</Error>}\r\n                            {errors.name && errors.name.type === \"maxLength\" && <Error role=\"alert\">Max length 20</Error>}\r\n                        </Label>\r\n\r\n                        <Label>\r\n                            <Input type=\"password\" id=\"pass\" name=\"password\"  aria-invalid={errors.password ? \"true\" : \"false\"} ref={register({required: true,minLength: 6,maxLength: 20})} />\r\n                            <PInput htmlFor=\"pass\" ><PZindex>Password</PZindex></PInput>\r\n                            {errors.password && errors.password.type === \"required\" && <Error role=\"alert\">This field is required</Error>}\r\n                            {errors.password && errors.password.type === \"minLength\" && <Error role=\"alert\">Min length 6</Error>}\r\n                            {errors.password && errors.password.type === \"maxLength\" && <Error role=\"alert\" >Max length 20</Error>}\r\n                        </Label>\r\n\r\n                        <Label>\r\n                            <Input type=\"password\" id=\"confirmpass\" name=\"password2\"  aria-invalid={errors.password2 ? \"true\" : \"false\"} ref={register({ validate: (value) => value === watch('password')})} />\r\n                            <PInput htmlFor=\"confirmpass\"><PZindex>Confirm Password</PZindex></PInput>\r\n                            {errors.password2 && <Error role=\"alert\">Passwords are different</Error>}\r\n                        </Label>\r\n\r\n                        <Label>\r\n                            <Input type=\"text\" id=\"email\" name=\"email\"  aria-invalid={errors.email ? \"true\" : \"false\"} ref={register({required: true})} />\r\n                            <PInput htmlFor=\"email\"><PZindex>Email</PZindex></PInput>\r\n                            {errors.email && <Error role=\"alert\">This field is required</Error>}\r\n                        </Label>\r\n\r\n                        <Terms>\r\n                            <Checkbox type=\"checkbox\" name=\"terms\" aria-invalid={errors.terms ? \"true\" : \"false\"} ref={register({required: true})}/>\r\n                            <p>I accept the <A href=\"https://notes-sage.vercel.app/terms\">terms and conditions</A></p>\r\n                            {errors.terms && <Error role=\"alert\">Accept the terms and conditions</Error>}\r\n                        </Terms>\r\n\r\n                        <Errors>\r\n                            {resErrors.errors && resErrors.errors.map((err,i) => <ErrorServer key={i}>{err}</ErrorServer>)}\r\n                        </Errors>\r\n                        <Submit><PZindex>Submit</PZindex></Submit>\r\n                    </Form>\r\n                </Container>\r\n            </>\r\n    );\r\n};\r\n\r\nexport default Register;"],"sourceRoot":""}